echo "----------------"
echo "|()()()()()()()|"
echo "|()()()()()()()|"
echo "|()()()()()()()|"
echo "|()()()()()()()|"
echo "|()()()()()()()|"
echo "|()()()()()()()|"
echo "|              |"
echo "=              ="
echo "----------------"
echo "Created by BuiYa"
echo "7.26.2020"
echo "Connect-4 game in bash"

reset(){
  Arr=(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )
  player=1
  gamestatus=1
}

set(){
  idx=$(( $1 * 7 + $2 ))
  add=$(( $idx + 7 ))
  if [ ${Arr[$idx]} == "." ] 
  then 
    Arr[$idx]=$3
    player=$((player%2+1))
  else
    echo "You can't place there!"
  fi
  
  if [ $idx -lt 35 ] && [ ${Arr[$add]} == "." ]
  then
  	Arr[$idx]="."
  	echo "Pieces can't float in mid-air."
	player=$((player%2+1))
  fi
}

print(){
  echo "r\c 0 1 2 3 4 5 6"
  echo "0   ${Arr[0]} ${Arr[1]} ${Arr[2]} ${Arr[3]} ${Arr[4]} ${Arr[5]} ${Arr[6]}"
  echo "1   ${Arr[7]} ${Arr[8]} ${Arr[9]} ${Arr[10]} ${Arr[11]} ${Arr[12]} ${Arr[13]}"
  echo "2   ${Arr[14]} ${Arr[15]} ${Arr[16]} ${Arr[17]} ${Arr[18]} ${Arr[19]} ${Arr[20]}"
  echo "3   ${Arr[21]} ${Arr[22]} ${Arr[23]} ${Arr[24]} ${Arr[25]} ${Arr[26]} ${Arr[27]}"
  echo "4   ${Arr[28]} ${Arr[29]} ${Arr[30]} ${Arr[31]} ${Arr[32]} ${Arr[33]} ${Arr[34]}"
  echo "5   ${Arr[35]} ${Arr[36]} ${Arr[37]} ${Arr[38]} ${Arr[39]} ${Arr[40]} ${Arr[41]}"
}

checkmatch(){
  if [ ${Arr[$1]} != "." ] && [ ${Arr[$1]} == ${Arr[$2]} ] && [ ${Arr[$2]} == ${Arr[$3]} ] && [ ${Arr[$3]} == ${Arr[$4]} ]
  then
    gamestatus=0
  fi
}

checkgame(){
#Vertical Cases
  checkmatch 35 28 21 14
  checkmatch 28 21 14 7
  checkmatch 21 14 7 0
  checkmatch 36 29 22 15
  checkmatch 29 22 15 8
  checkmatch 22 15 8 1
  checkmatch 37 30 23 16
  checkmatch 30 23 16 9
  checkmatch 23 16 9 2
  checkmatch 38 31 24 17
  checkmatch 31 24 17 10
  checkmatch 24 17 10 3
  checkmatch 39 32 25 18
  checkmatch 32 25 18 11
  checkmatch 25 18 11 4
  checkmatch 40 33 26 19
  checkmatch 33 26 19 12
  checkmatch 26 19 12 5
  checkmatch 41 34 27 20
  checkmatch 34 27 20 13
  checkmatch 27 20 13 6

#Horizontal Cases
  checkmatch 35 36 37 38
  checkmatch 36 37 38 39
  checkmatch 37 38 39 40
  checkmatch 38 39 40 41
  checkmatch 28 29 30 31
  checkmatch 29 30 31 32
  checkmatch 30 31 32 33
  checkmatch 31 32 33 34
  checkmatch 21 22 23 24
  checkmatch 22 23 24 25
  checkmatch 23 24 25 26
  checkmatch 24 25 26 27
  checkmatch 14 15 16 17
  checkmatch 15 16 17 18
  checkmatch 16 17 18 19
  checkmatch 17 18 19 20
  checkmatch 7 8 9 10
  checkmatch 8 9 10 11
  checkmatch 9 10 11 12
  checkmatch 10 11 12 13
  checkmatch 0 1 2 3
  checkmatch 1 2 3 4
  checkmatch 2 3 4 5
  checkmatch 3 4 5 6

#Right Diag Cases
  checkmatch 14 22 30 38
  checkmatch 7 15 23 31
  checkmatch 15 23 31 39
  checkmatch 0 8 16 24
  checkmatch 8 16 24 32
  checkmatch 16 24 32 40
  checkmatch 1 9 17 25
  checkmatch 9 17 25 33
  checkmatch 17 25 33 41
  checkmatch 2 10 18 26
  checkmatch 10 18 26 34
  checkmatch 3 11 19 27

#Left Diag Cases
  checkmatch 20 26 32 38
  checkmatch 13 19 25 31
  checkmatch 19 25 31 37
  checkmatch 6 12 18 24
  checkmatch 12 18 24 30
  checkmatch 18 24 30 36
  checkmatch 5 11 17 23
  checkmatch 11 17 23 29
  checkmatch 17 23 29 35
  checkmatch 4 10 16 22
  checkmatch 10 16 22 28
  checkmatch 3 9 15 21
}


reset
#game loop
while [ 0 == 0 ]
do
  echo ""
  if [ $player == 1 ]
  then
  	sym=X
  else
  	sym=O
  fi

  echo "Player $player turn: ($sym)"
  print

  	while [ 0 == 0 ]
	do
  		echo ""
 		echo "1. set (r) (c)"
 		echo "2. restart"
    		read -r cmd a b
    		if [ $cmd == "set" ]
		then
  			set $a $b $sym
			break
    		elif [ $cmd == "restart" ]
		then
			reset
			break
    		else
			echo "Wrong input/command, try again."
   		fi
  	done

  checkgame
  if [ $gamestatus != 1 ]
  then
	echo ""
	print
	echo ""
  	echo "Gameover"
  	player=$((player%2+1))
  	echo "Player $player ($sym) wins!"
	echo "Type "restart" to play again or press "ctrl + c" to quit"
   	while [ 0 == 0 ]
	do
    		read -r cmd n
    		if [ $cmd == "restart" ]
		then
	  		reset
	  		break
  		fi
   	done
  fi
done

